parameters:
- name: python.pytest.suppress_warnings
  type: string
  default: 'ignore:string with gap:DeprecationWarning'

stages:
- stage:
  jobs:
  - template: templates/jobs/poetry-bootstrap.yml
    parameters:
      python.version: 3.8
      run.additional_steps:
      - bash: |
          eval "$(conda shell.bash hook)"
          conda activate $CONDA_ENV
          echo "##[debug]Inside conda environment ${CONDA_ENV}; poetry install"
          poetry install
        displayName: "poetry: install package"

      - bash: |
          suppress_warnings="${{ parameters['python.pytest.suppress_warnings'] }}"
          echo "##[debug]${suppress_warnings}"

          if [ ! -z "$suppress_warnings" ]
          then
            echo "##vso[task.logissue type=warning]Suppressing pytest warnings: ${suppress_warnings}"
            echo "##vso[task.setvariable variable=suppress_warnings_args]-W ${suppress_warnings} "
          fi
        displayName: Process warning suppression parameter

      - template: templates/steps/report-env-vars.yaml

      - script: |
          eval "$(conda shell.bash hook)"
          source activate $CONDA_ENV
          echo poetry run pytest \
              --junitxml=reports/unit-test-results.xml \
              --cov=ci_sandbox \
              --cov-report=xml \
              --cov-append \
              ci_sandbox \
              "${SUPPRESS_WARNINGS_ARGS}"

          poetry run pytest \
              --junitxml=reports/unit-test-results.xml \
              --cov=ci_sandbox \
              --cov-report=xml \
              --cov-append \
              ci_sandbox \
              "${SUPPRESS_WARNINGS_ARGS}"
        workingDirectory: $(Build.SourcesDirectory)
        displayName: 'poetry: Run unit tests'
        env:
          SUPPRESS_WARNING_ARGS: "$(variables.suppress_warnings_args)"

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(Pipeline.Workspace)/**/coverage.xml'
        displayName: Publish code coverage