trigger: none

stages:
- stage: A
  jobs:
  - job: A1
    steps:
    - bash: echo "##vso[task.setvariable variable=pkg.version;isOutput=true]9.9.9"
      name: A11
      displayName: Create vars
  - template: templates/job_A.yaml
  - job: A2A3
    strategy:
      matrix:
        A2:
          VARIABLE: A2Value
        A3:
          VARIABLE: A3Value
    steps:
    - bash: |
        echo "##vso[task.setvariable variable=output.variable;setOutput=true]${VARIABLE}"
        echo "##[debug]Job name: ${SYSTEM_JOBNAME}"
        echo "##[debug]Variable: ${VARIABLE}"
      name: A2A31
  - job: A4
    dependsOn: A2A3
    variables:
      dependencies: $[ convertToJson(dependencies) ]
    steps:
    - bash: echo "${DEPENDENCIES}"
      displayName: Job Dependencies

- stage: B
  dependsOn: A
  variables:
    # Syntax is important here. Only runtime expressions work (stageDependencies doesn't exist yet)
    pkg.version.stage.set_in_main: $[ stageDependencies.A.A1.outputs['A11.pkg.version'] ]
    pkg.version.stage.set_in_template: $[ stageDependencies.A.TJA1.outputs['TJA11.pkg.version']]
    x.set_in_main: $[ stageDependencies.A.A2.outputs['A2A31.output.variable'] ]
    stage_dependencies: $[ convertToJson(stageDependencies) ]
  jobs:
  - job: B1
    variables:
      pkg.version.job: $[ stageDependencies.A.A1.outputs['A11.pkg.version'] ]
    steps:
    - bash: |
        echo "pkg.version (stage; set in main): "$(pkg.version.stage.set_in_main)
        echo "pkg.version (stage; set in template): "$(pkg.version.stage.set_in_template)
        echo "pkg.version (job): "$(pkg.version.job)
      displayName: Check vars
  - template: templates/job_B.yaml
    parameters:
      # Syntax is important here. If ${{ ... }} is used, the runtime expression on the stage vars
      # is not expanded.
      param1: $(pkg.version.stage.set_in_main)
      param2: $(pkg.version.stage.set_in_template)
  - job: B2
    variables:
      X: $[ stageDependencies.A.A2.outputs['A2A31.output.variable'] ]
      Z: 2
    steps:
    - bash: echo "$STAGE_DEPENDENCIES"
      displayName: Stage Dependencies
    - bash: |
        echo "X: $X"
        echo "Z: $Z"
      displayName: X Inaccessible
